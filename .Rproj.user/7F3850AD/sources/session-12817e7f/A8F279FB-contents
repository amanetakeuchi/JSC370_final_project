---
title: "Lab 11 - Interactive Visualization"
output: html_document
---

```{r setup, echo=FALSE}
knitr::opts_chunk$set(eval = TRUE, include  = TRUE, warning=FALSE, message=FALSE)
```

# Learning Goals

- Read in and process Starbucks informatio
- Create interactive graphs of different types using `ggplotly()` and `plot_ly()` 
- Customize the hoverinfo and other plot features
- Create a Choropleth map using `plot_geo()`

# Lab Description

We will work with two Starbucks datasets, one on the store locations (global) and one for the nutritional data for their food and drink items. We will do some text analysis of the menu items.

# Steps

### 0. Install and load libraries

```{r message=FALSE, echo=FALSE, warning=FALSE}

library(tidyverse)
library(plotly)
library(widgetframe)
library(tidytext)

```
### 1. Read in the data

- There are 4 datasets to read in, Starbucks locations, Starbucks nutrition, US population by state, and US state abbreviations.

```{r}

sb_locs <- read_csv("starbucks-locations.csv", show_col_types=FALSE)

sb_nutr <- read_csv("starbucks-menu-nutrition.csv", show_col_types=FALSE)

usa_pop <- read_csv("us_state_pop.csv", show_col_types=FALSE)

usa_states<-read_csv("states.csv", show_col_types=FALSE)
```

### 2. Look at the data

- Inspect each dataset to look at variable names and ensure it was imported correctly


```{r}
# Check the datatype 
# no need to do any sort of cleaning (e.g. remove any rows), but check that all data are imported correctly

summary(sb_locs)
summary(sb_nutr)
summary(usa_pop)
summary(usa_states)
```

### 3. Format the data

- Subset Starbucks data to the US.
- Create counts of Starbucks stores by state.
- Merge population in with the store count by state.
- Inspect the range values for each variable. 


```{r}
sb_usa <- sb_locs |> filter(
  # keep only those in the US
  Country=="US"
)

sb_locs_state <- sb_usa |>
  group_by(
    # state
    `State/Province`
  ) |>
  rename(
    # optional
    state = `State/Province`
  ) |>
  summarize(
    # number of stores in each state
    n_stores= n()
  )

# need state abbreviations
usa_pop_abbr <- 
  full_join(
    # 1. usa_pop
    # 2. usa_states 
    usa_pop, usa_states, by = join_by(state == State)
            ) 
  
sb_locs_state <- full_join(sb_locs_state, usa_pop_abbr, by = join_by(state==Abbreviation))
  

summary(sb_locs_state)
```

### 4. Use `ggplotly` for EDA

Answer the following questions:

- Are the number of Starbucks proportional to the population of a state? (scatterplot)
Yes, the number of Starbucks proportional to the population of a state because we can clearly fit a positive linear line in the scatter plot below.
```{r}
pl <- ggplot(sb_locs_state, aes(x=population, y=n_stores, color=state)) + 
  geom_point(alpha=0.8)
ggplotly(pl)
```



- Is the caloric distribution of Starbucks menu items different for drinks and food? (histogram)
Yes, the caloric distribution of Starbucks menu items are different for drinks and food. Notice that the food menu items have higher calories compared to drink menu items from the below histogram.
```{r}
pl2 <- ggplot(sb_nutr, aes(x=Calories, fill=Category)) + 
  geom_histogram(alpha=0.5, position="identity") + theme_minimal()

ggplotly(pl2)
```

- What are the top 20 words in Starbucks menu items? (bar plot)
Below bar plot shows the top 20 words in the Starbucks menu items.
```{r}
# TODO:
p3<- sb_nutr |>
  unnest_tokens(word, Item, token="words") |>
  count(word, sort=T) |>
  head(20) |>
  ggplot(aes(x=word, y=n))+
  geom_col()+
  coord_flip()
ggplotly(p3)
```



### 5. Scatterplots using `plot_ly()`

- Create a scatterplot using `plot_ly()` representing the relationship between calories and carbs
- Color points by category

```{r}
sb_nutr |>
  plot_ly(x = ~Calories,
          y = ~`Carb. (g)`,
          type = "scatter",
          mode = "markers",
          color = ~Category)
```




- Create this scatterplot but for the items consisting of the top 10 words
- Color again by category
- Add hoverinfo specifying the word in the item name
- Add layout information to title the chart and the axes
- Enable `hovermode = "compare"`
  
```{r}
topwords <- sb_nutr |>
  unnest_tokens(word, Item, token="words") |>
  count(word, sort=T) |>
  head(10)

sb_nutr |>
  unnest_tokens(word, Item, token="words") |>
  filter(word %in% topwords$word) |>
  plot_ly(
    x = ~Calories,
    y = ~`Carb. (g)`,
    type = "scatter",
    mode = "markers",
    color = ~Category,
    hoverinfo = "text",
    text = ~paste0("Item: ", word, sep="")
  ) |>
  layout(title = "Scatterplot for the items consisting of the top 10 words",
         xaxis = list(title = "Calories"),
         yaxis = list(title = "Carb. in grams"),
         hovermode = "compare")

  
```

 



### 6. `plot_ly` Boxplots

- Create a boxplot of all of the nutritional variables in groups by the 10 item words.

```{r}

filtered_data <- sb_nutr |>
  unnest_tokens(word, Item, token="words") |>
  filter(word %in% topwords$word) 
# TODO:
boxplot <- filtered_data |>
  plot_ly(x=~word, type="box") |>
  add_boxplot(y = ~Calories, boxpoints="all") |>
  add_boxplot(y =~`Fat (g)`, boxpoints="all") |>
  layout(title = "Boxpot of all the nutritional variables in the top 10 words",
         yaxis = list(title = "Nutritional variables values"),
         xaxis = list(title = "Top 10 items"),
         boxmode="group")
boxplot
```

### 7. 3D Scatterplot

- Create a 3D scatterplot between Calories, Carbs, and Protein for the items containing the top 10 words
- Do you see any patterns?
Items with higher protein and higher carbs tend to have higher calories.
```{r}

 filtered_data |>
  plot_ly(x= ~Calories,
          y= ~`Carb. (g)`,
          z = ~`Protein (g)`,
          type = "scatter3d",
          mode = "markers",
          color = ~word)
```


### 8. `plot_ly` Map

- Create a map to visualize the number of stores per state, and another for the population by state. Use subplot to put the maps side by side.
- Describe the differences if any.
It seems that states in the west tend to have Starbucks stores with propotion to its population. However, the number of Starbucks in the east is relatively lower than the number of Starbucks in the west.
```{r}
# Set up mapping details
set_map_details <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('steelblue')
)

# Make sure both maps are on the same color scale
shadeLimit <- 125

# Create hover text
sb_locs_state$hover <- with(sb_locs_state, paste("Number of Starbucks: ", n_stores, '<br>', "State: ", state.y, '<br>', "Population: ", population))

# Create the map
map1 <- plot_geo(sb_locs_state, locationmode="USA-states") |>
  add_trace(z = ~n_stores, text = ~hover, locations = ~state, color=~n_stores, colors = "Purples")|>
  layout(title = "Starbucks stores by state", geo=set_map_details)
map1


map2 <- plot_geo(sb_locs_state, locationmode="USA-states") |>
  add_trace(z = ~population, text = ~hover, locations = ~state, color=~population, colors = "Purples")|>
  layout(title = "Population by state", geo=set_map_details)
map2

subplot(map1, map2)
```

